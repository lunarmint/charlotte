[project]
name = "charlotte"
version = "0.1.0"
description = "A cutscene encoder tool for a certain popular anime game."
requires-python = ">=3.13, <3.14"
authors = [
    { name = "lunarmint", email = "developer@chocomint.dev" }
]
maintainers = [
    { name = "Mint" },
]
readme = "README.md"

[project.urls]
Homepage = "https://github.com/lunarmint/charlotte"

[tool.poetry]
package-mode = false
requires-poetry = ">=2.0"

[tool.poetry.dependencies]
pyinstaller = "6.14.0"
typer = ">=0.16.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
deptry = ">=0.23.0"
ruff = ">=0.11.8"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "ASYNC", # flake8-async
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle rules
    "F", # pyflakes rules
    "I", # isort rules
    "PERF", # (perflint) prevent performance anti-patterns
    "PLE", # pylint errors
    "PLW", # pylint rules
    "N", # pep8-naming
    "Q", # flake8-quotes
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "T20", # (disallow print statements) keep debugging statements out of the codebase
    "W", # pycodestyle warnings
    "UP", # (pyupgrade) auto-upgrade syntax to newer versions of Python
]

extend-safe-fixes = [
    "TCH", # move import from and to TYPE_CHECKING blocks
]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
